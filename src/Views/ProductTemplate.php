<?php
namespace App\Views;
use App\Views\BaseTemplate;

class ProductTemplate extends BaseTemplate
{
    /**
     * @param array $arr –ú–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
     * @param int $basketCount –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
     * @return string
     */
    public static function getAllTemplate(array $arr, int $basketCount): string
    {
        $template = parent::getTemplate();
        $title = '–ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ - Bubble Pizza';

        // –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        $categories = [
            'pizza' => [],
            'snack' => [],
            'drink' => [],
            'sauce' => [],
        ];

        // –ú–∞—Å—Å–∏–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∫–ª—é—á–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –∏—Ö —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
        $categoryNames = [
            'pizza' => '–ü–∏—Ü—Ü–∞',
            'snack' => '–ó–∞–∫—É—Å–∫–∏',
            'drink' => '–ù–∞–ø–∏—Ç–∫–∏',
            'sauce' => '–°–æ—É—Å—ã',
        ];

        foreach ($arr as $item) {
            if (isset($categories[$item['category']])) {
                $categories[$item['category']][] = $item;
            }
        }

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∏–ª—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
        $basketDisplayStyle = $basketCount > 0 ? 'flex' : 'none';

        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
        $menuItems = '';
        foreach ($categoryNames as $key => $name) {
            $menuItems .= <<<HTML
            <li class="nav-item">
                <a class="nav-link category-nav-link" href="#$key">$name</a>
            </li>
HTML;
        }

        $menu = <<<HTML
        <nav class="category-navbar">
            <div class="container-fluid">
                <ul class="nav justify-content-center w-100">
                    $menuItems
                </ul>
            </div>
        </nav>
HTML;

        // –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        $content = '';

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Å—Ç–∏–ª–µ "–û –Ω–∞—Å"
        $content .= <<<HTML
        <div class="catalog-hero text-center position-relative">
            <div class="floating-pizza pizza-1">üçï</div>
            <div class="floating-pizza pizza-2">üçï</div>
            <div class="floating-pizza pizza-3">üçï</div>
            <div class="floating-pizza pizza-4">üçï</div>
            
            <h1 class="catalog-title">
                –ö–∞—Ç–∞–ª–æ–≥ 
                <img src="/assets/image/BP.ico" alt="Bubble Pizza" class="title-icon">
                Bubble Pizza
            </h1>
            <p class="lead fs-4 text-dark opacity-75 mb-3">–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –∏–¥–µ–∞–ª—å–Ω—É—é –ø–∏—Ü—Ü—É –∏ –Ω–µ —Ç–æ–ª—å–∫–æ!</p>
        </div>
HTML;

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é
        $content .= $menu;

        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞–∑–¥–µ–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        foreach ($categories as $category => $items) {
            if (empty($items)) continue;
            
            $categoryName = $categoryNames[$category] ?? ucfirst($category);

            $content .= <<<HTML
            <section id="$category" class="category-section mb-5">
                <h2 class="category-title text-center mb-4">$categoryName</h2>
                <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4">
HTML;

            foreach ($items as $item) {
                $content .= <<<HTML
                    <div class="col">
                        <div class="card h-100 product-card">
                            <div class="product-image-container">
                                <img src="{$item['image']}" class="card-img-top product-image" alt="{$item['name']}">
                                <div class="product-overlay">
                                    <a href="http://localhost/products/{$item['id']}" class="view-details-btn">
                                        <i class="fas fa-eye"></i>
                                        –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                                    </a>
                                </div>
                            </div>
                            <div class="card-body d-flex flex-column justify-content-between">
                                <div>
                                    <a href="http://localhost/products/{$item['id']}" class="product-link">
                                        <h5 class="card-title product-name">{$item['name']}</h5>
                                    </a>
                                    <p class="card-text product-description">{$item['description']}</p>
                                </div>
                                <div>
                                    <h5 class="card-title product-price"><strong>–¶–µ–Ω–∞: </strong>{$item['price']} —Ä—É–±.</h5>
                                    <form class="mt-3 add-to-basket-form" action="/basket" method="POST">
                                        <input type="hidden" name="id" value="{$item['id']}">
                                        <button type="submit" class="btn btn-custom w-100 add-to-cart-btn">
                                            <i class="fas fa-plus"></i>
                                            –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
HTML;
            }

            $content .= <<<HTML
                </div>
            </section>
HTML;
        }

        // –°—Ç–∏–ª–∏ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞
        $content .= <<<HTML
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
        <style>
            /* –ê–Ω–∏–º–∞—Ü–∏–∏ */
            @keyframes float {
                0%, 100% { transform: translateY(0) translateX(0) rotate(0deg); }
                25% { transform: translateY(-15px) translateX(8px) rotate(3deg); }
                50% { transform: translateY(8px) translateX(-12px) rotate(-2deg); }
                75% { transform: translateY(-10px) translateX(-8px) rotate(2deg); }
            }

            @keyframes slideUp {
                to { opacity: 1; transform: translateY(0); }
            }

            /* –ì–µ—Ä–æ–π-—Å–µ–∫—Ü–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞ */
            .catalog-hero {
                background: linear-gradient(135deg, rgba(102,126,234,0.1) 0%, rgba(118,75,162,0.1) 50%, rgba(102,126,234,0.1) 100%);
                border-radius: 25px;
                padding: 4rem 2rem;
                margin-bottom: 3rem;
                position: relative;
                overflow: hidden;
                text-align: center;
            }
            
            /* –ü–ª–∞–≤–∞—é—â–∏–µ –ø–∏—Ü—Ü—ã */
            .floating-pizza {
                position: absolute;
                font-size: 3rem;
                opacity: 0.15;
                animation: float 8s ease-in-out infinite;
                z-index: 1;
                text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
                pointer-events: none;
            }
            
            .pizza-1 { top: 15%; left: 8%; animation-delay: 0s; }
            .pizza-2 { top: 25%; right: 10%; animation-delay: 2s; }
            .pizza-3 { bottom: 20%; left: 12%; animation-delay: 4s; }
            .pizza-4 { bottom: 30%; right: 8%; animation-delay: 6s; }

            .catalog-title {
                font-size: 3rem;
                font-weight: 800;
                background: linear-gradient(135deg, #667eea, #764ba2);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
                margin-bottom: 1rem;
                position: relative;
                z-index: 2;
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 1rem;
            }
            
            .title-icon {
                width: 50px;
                height: 50px;
                border-radius: 12px;
                object-fit: contain;
            }

            /* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */
            .category-navbar {
                background: rgba(255, 255, 255, 0.95);
                backdrop-filter: blur(15px);
                border-radius: 20px;
                padding: 1rem;
                margin-bottom: 3rem;
                border: 1px solid rgba(255, 255, 255, 0.3);
                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
                position: sticky;
                top: 20px;
                z-index: 100;
            }
            
            .category-nav-link {
                color: #667eea;
                font-weight: 600;
                padding: 0.5rem 1.5rem;
                border-radius: 25px;
                transition: all 0.3s ease;
                margin: 0 0.5rem;
                text-decoration: none;
            }
            
            .category-nav-link:hover,
            .category-nav-link.active {
                background: linear-gradient(135deg, #667eea, #764ba2);
                color: white !important;
                transform: translateY(-2px);
            }

            /* –°–µ–∫—Ü–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π */
            .category-section {
                opacity: 0;
                transform: translateY(30px);
                animation: slideUp 0.8s ease forwards;
            }
            
            .category-title {
                font-size: 2.5rem;
                font-weight: 700;
                background: linear-gradient(135deg, #667eea, #764ba2);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
                margin-bottom: 2rem;
            }

            /* –ö–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ */
            .product-card {
                background: rgba(255, 255, 255, 0.95);
                backdrop-filter: blur(15px);
                border-radius: 20px;
                border: 1px solid rgba(255, 255, 255, 0.3);
                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
                transition: all 0.4s ease;
                overflow: hidden;
            }
            
            .product-card:hover {
                transform: translateY(-10px);
                box-shadow: 0 15px 40px rgba(102,126,234, 0.2);
            }

            .product-image-container {
                position: relative;
                height: 200px;
                overflow: hidden;
            }
            
            .product-image {
                width: 100%;
                height: 100%;
                object-fit: cover;
                transition: transform 0.4s ease;
            }
            
            .product-card:hover .product-image {
                transform: scale(1.1);
            }
            
            .product-overlay {
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: rgba(102,126,234, 0.9);
                display: flex;
                align-items: center;
                justify-content: center;
                opacity: 0;
                transition: opacity 0.3s ease;
            }
            
            .product-card:hover .product-overlay {
                opacity: 1;
            }
            
            .view-details-btn {
                color: white;
                text-decoration: none;
                padding: 12px 24px;
                border: 2px solid white;
                border-radius: 25px;
                font-weight: 600;
                transition: all 0.3s ease;
                display: flex;
                align-items: center;
                gap: 8px;
            }
            
            .view-details-btn:hover {
                background: white;
                color: #667eea;
            }

            .product-link {
                text-decoration: none;
                color: inherit;
            }
            
            .product-name {
                color: #333;
                font-weight: 700;
                margin-bottom: 0.5rem;
            }
            
            .product-description {
                color: #666;
                line-height: 1.5;
            }
            
            .product-price {
                color: #667eea;
                font-weight: 700;
            }

            .btn-custom {
                background: linear-gradient(135deg, #667eea, #764ba2);
                color: white;
                border: none;
                border-radius: 25px;
                font-weight: 600;
                transition: all 0.3s ease;
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 8px;
                padding: 10px 20px;
            }
            
            .btn-custom:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(102,126,234, 0.4);
                color: white;
            }

            /* --- –ê–ù–ò–ú–ê–¶–ò–ò –ö–û–†–ó–ò–ù–´ --- */
            @keyframes basket-jump {
                0% { transform: scale(1) rotate(0deg); box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3); }
                25% { transform: scale(1.15) rotate(5deg); box-shadow: 0 8px 20px rgba(255, 71, 87, 0.7); }
                50% { transform: scale(1.15) rotate(-5deg); }
                100% { transform: scale(1) rotate(0deg); box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3); }
            }
            
            .floating-basket-btn.animate-jump {
                animation: basket-jump 0.5s ease-in-out;
            }

            /* --- –°–¢–ò–õ–ò –ö–ù–û–ü–ö–ò –ö–û–†–ó–ò–ù–´ --- */
            .floating-basket-btn {
                position: fixed;
                right: 55px;
                bottom: 80px;
                width: 70px;  
                height: 70px; 
                background: linear-gradient(135deg, #667eea, #764ba2);
                color: white;
                border-radius: 50%;
                font-size: 24px; 
                box-shadow: 0 8px 25px rgba(102,126,234, 0.4);
                z-index: 99999;
                transition: all 0.15s ease; /* –û—á–µ–Ω—å –±—ã—Å—Ç—Ä–∞—è –∞–Ω–∏–º–∞—Ü–∏—è */
                text-decoration: none;
                display: flex;
                align-items: center;
                justify-content: center;
                cursor: pointer;
                border: 3px solid white;
                transform: translateY(0);
                opacity: 1;
            }

            /* –ö–ª–∞—Å—Å—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–∫—Ä–æ–ª–ª–∞ */
            .floating-basket-btn.scroll-hide {
                transform: translateY(15px); /* –ú–∞–ª–µ–Ω—å–∫–æ–µ —Å–º–µ—â–µ–Ω–∏–µ */
                opacity: 0.8; /* –õ–µ–≥–∫–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å */
            }

            .floating-basket-btn.scroll-show {
                transform: translateY(0);
                opacity: 1;
            }

            .floating-basket-btn:hover {
                transform: scale(1.1);
                box-shadow: 0 12px 35px rgba(102,126,234, 0.6);
            }

            .basket-count {
                position: absolute;
                top: -5px;
                right: -5px;
                background: #ff4757;
                color: white;
                font-size: 12px;
                font-weight: bold;
                border-radius: 50%;
                padding: 4px 8px;
                min-width: 22px;
                height: 22px;
                line-height: 14px;
                text-align: center;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
                border: 2px solid white;
            }

            /* --- –°–¢–ò–õ–ò –í–°–ü–õ–´–í–ê–Æ–©–ï–ô –ü–û–î–°–ö–ê–ó–ö–ò (–¢–û–°–¢–ê) --- */
            .basket-toast {
                position: absolute;
                background: #28a745;
                color: white;
                padding: 8px 16px;
                border-radius: 8px;
                font-size: 14px;
                font-weight: bold;
                opacity: 0;
                top: -40px;
                left: 50%;
                transform: translateX(-50%);
                pointer-events: none;
                transition: opacity 0.3s ease-out, transform 0.4s ease-out;
                z-index: 10000;
                box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            }
            
            .basket-toast.show {
                opacity: 1;
                transform: translateX(-50%) translateY(-5px);
            }

            /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
            @media (max-width: 768px) {
                .catalog-title {
                    font-size: 2.2rem;
                    flex-direction: column;
                    gap: 0.5rem;
                }
                
                .title-icon {
                    width: 40px;
                    height: 40px;
                }
                
                .category-title {
                    font-size: 2rem;
                }
                
                .floating-pizza {
                    font-size: 2rem;
                }
                
                .pizza-1 { top: 10%; left: 5%; }
                .pizza-2 { top: 15%; right: 5%; }
                .pizza-3 { bottom: 15%; left: 8%; }
                .pizza-4 { bottom: 20%; right: 5%; }
                
                .floating-basket-btn {
                    right: 20px;
                    bottom: 20px;
                    width: 60px;
                    height: 60px;
                    font-size: 20px;
                }
                
                .floating-basket-btn.scroll-hide {
                    transform: translateY(10px);
                    opacity: 0.8;
                }
                
                .category-navbar .nav {
                    flex-wrap: wrap;
                }
                
                .category-nav-link {
                    margin: 0.25rem;
                    padding: 0.5rem 1rem;
                }
            }
        </style>

        <script>
            document.addEventListener('DOMContentLoaded', function() {
                const forms = document.querySelectorAll('.add-to-basket-form');
                const floatingButton = document.getElementById('floatingBasketButton');
                const basketCountSpan = document.getElementById('basketItemCount');
                const categoryLinks = document.querySelectorAll('.category-nav-link');
                
                // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫—Ä–æ–ª–ª–æ–º
                let lastScrollTop = 0;
                let scrollTimeout = null;
                
                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∫—Ä–æ–ª–ª–∞
                function handleScroll() {
                    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
                    const scrollDirection = scrollTop > lastScrollTop ? 'down' : 'up';
                    
                    // –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ —Å–∫—Ä–æ–ª–ª
                    if (scrollDirection === 'down' && scrollTop > 50) {
                        // –°–∫—Ä–æ–ª–ª –≤–Ω–∏–∑ - —Å–ª–µ–≥–∫–∞ —Å–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫—É
                        floatingButton.classList.remove('scroll-show');
                        floatingButton.classList.add('scroll-hide');
                    } else {
                        // –°–∫—Ä–æ–ª–ª –≤–≤–µ—Ä—Ö –∏–ª–∏ –≤–≤–µ—Ä—Ö—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã - —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
                        floatingButton.classList.remove('scroll-hide');
                        floatingButton.classList.add('scroll-show');
                    }
                    
                    lastScrollTop = scrollTop;
                    
                    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–∞—É—Ç
                    if (scrollTimeout) {
                        clearTimeout(scrollTimeout);
                    }
                    
                    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —á–µ—Ä–µ–∑ 0.5 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∫—Ä–æ–ª–ª–∞
                    scrollTimeout = setTimeout(() => {
                        floatingButton.classList.remove('scroll-hide');
                        floatingButton.classList.add('scroll-show');
                    }, 500); // –û—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ - 0.5 —Å–µ–∫—É–Ω–¥—ã
                }
                
                // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∫—Ä–æ–ª–ª–∞ —Å —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥–æ–º
                let scrollThrottle = null;
                window.addEventListener('scroll', function() {
                    if (!scrollThrottle) {
                        scrollThrottle = setTimeout(() => {
                            handleScroll();
                            scrollThrottle = null;
                        }, 25); // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
                    }
                });
                
                // –ü–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Å –æ—Ç—Å—Ç—É–ø–æ–º
                categoryLinks.forEach(link => {
                    link.addEventListener('click', function(e) {
                        e.preventDefault();
                        const targetId = this.getAttribute('href');
                        const targetElement = document.querySelector(targetId);
                        if (targetElement) {
                            const offsetTop = targetElement.offsetTop - 100;
                            window.scrollTo({
                                top: offsetTop,
                                behavior: 'smooth'
                            });
                            
                            // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                            categoryLinks.forEach(l => l.classList.remove('active'));
                            this.classList.add('active');
                            
                            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ —Å–∫—Ä–æ–ª–ª–∞
                            setTimeout(() => {
                                floatingButton.classList.remove('scroll-hide');
                                floatingButton.classList.add('scroll-show');
                            }, 300);
                        }
                    });
                });

                // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–µ–∫—Ü–∏–π
                const observer = new IntersectionObserver(function(entries) {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            entry.target.style.animationPlayState = 'running';
                        }
                    });
                }, { threshold: 0.1 });

                document.querySelectorAll('.category-section').forEach(el => {
                    observer.observe(el);
                });

                // –ü–µ—Ä–µ—Ö–≤–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
                forms.forEach(form => {
                    form.addEventListener('submit', function(event) {
                        event.preventDefault();
                        
                        const formData = new FormData(this);
                        const button = this.querySelector('button[type="submit"]');

                        // 1. –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –∏ –ø–æ–¥—Å–∫–∞–∑–∫–∏
                        animateBasket(button, floatingButton);

                        // 2. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
                        fetch(this.action, {
                            method: 'POST',
                            body: formData
                        })
                        .then(response => response.json())
                        .then(data => {
                            // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
                            const newCount = data.basketCount || data.count;
                            if (newCount !== undefined) {
                                basketCountSpan.textContent = newCount;
                                floatingButton.style.display = 'flex';
                                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞
                                floatingButton.classList.remove('scroll-hide');
                                floatingButton.classList.add('scroll-show');
                            } else {
                                // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –≤–µ—Ä–Ω—É–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –Ω–∞ 1
                                let currentCount = parseInt(basketCountSpan.textContent) || 0;
                                currentCount += 1;
                                basketCountSpan.textContent = currentCount;
                                floatingButton.style.display = 'flex';
                                floatingButton.classList.remove('scroll-hide');
                                floatingButton.classList.add('scroll-show');
                            }
                        })
                        .catch(error => {
                            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É:', error);
                            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—Å–µ —Ä–∞–≤–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                            let currentCount = parseInt(basketCountSpan.textContent) || 0;
                            currentCount += 1;
                            basketCountSpan.textContent = currentCount;
                            floatingButton.style.display = 'flex';
                            floatingButton.classList.remove('scroll-hide');
                            floatingButton.classList.add('scroll-show');
                        });
                    });
                });

                function animateBasket(sourceButton, targetButton) {
                    // –ê–Ω–∏–º–∞—Ü–∏—è 1: –ü—Ä—ã–∂–æ–∫ –∫–Ω–æ–ø–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
                    targetButton.classList.remove('animate-jump');
                    void targetButton.offsetWidth;
                    targetButton.classList.add('animate-jump');
                    
                    // –ê–Ω–∏–º–∞—Ü–∏—è 2: –í—Å–ø–ª—ã–≤–∞—é—â–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞ "–î–æ–±–∞–≤–ª–µ–Ω–æ"
                    let toast = sourceButton.parentNode.querySelector('.basket-toast');
                    if (!toast) {
                        toast = document.createElement('div');
                        toast.className = 'basket-toast';
                        toast.textContent = '–î–æ–±–∞–≤–ª–µ–Ω–æ!';
                        sourceButton.parentNode.insertBefore(toast, sourceButton);
                    }
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ—Å—Ç
                    toast.classList.add('show');
                    
                    // –°–∫—Ä—ã–≤–∞–µ–º —Ç–æ—Å—Ç —á–µ—Ä–µ–∑ 1.5 —Å–µ–∫—É–Ω–¥—ã
                    setTimeout(() => {
                        toast.classList.remove('show');
                    }, 1500);
                }
                
                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
                setTimeout(() => {
                    floatingButton.classList.add('scroll-show');
                }, 300);
            });
        </script>
HTML;

        $resultTemplate = sprintf($template, $title, $content);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∫–æ—Ä–∑–∏–Ω—ã –ü–û–°–õ–ï –≤—Å–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        $resultTemplate .= <<<HTML
        <!-- –ü–ª–∞–≤–∞—é—â–∞—è –∫–Ω–æ–ø–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã -->
        <a href="/order" class="floating-basket-btn" id="floatingBasketButton" style="display: $basketDisplayStyle">
            <i class="fas fa-shopping-basket"></i>
            <span class="basket-count" id="basketItemCount">$basketCount</span>
        </a>
HTML;

        return $resultTemplate;
    }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML-–∫–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞.
     */
    public static function getCardTemplate(array $data = null): string
    {
        $template = parent::getTemplate();
        $title = '–ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞ - ' . ($data['name'] ?? '');

        if ($data === null) {
            $content = '<div class="alert alert-danger" role="alert">–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.</div>';
            $resultTemplate = sprintf($template, $title, $content);
            return $resultTemplate;
        }

        $content = <<<HTML
        <div class="container mt-4">
            <div class="product-detail-card">
                <div class="product-detail-image">
                    <img src="{$data['image']}" alt="{$data['name']}">
                </div>
                <div class="product-detail-content">
                    <h1 class="product-detail-name">{$data['name']}</h1>
                    <p class="product-detail-description">{$data['description']}</p>
                    <div class="product-detail-price">{$data['price']} ‚ÇΩ</div>
                    <form class="product-detail-form" action="/basket" method="POST">
                        <input type="hidden" name="id" value="{$data['id']}">
                        <button type="submit" class="btn btn-custom large">
                            <i class="fas fa-plus"></i>
                            –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                        </button>
                    </form>
                </div>
            </div>
        </div>
        
        <style>
            .product-detail-card {
                background: rgba(255, 255, 255, 0.95);
                backdrop-filter: blur(15px);
                border-radius: 20px;
                padding: 2rem;
                border: 1px solid rgba(255, 255, 255, 0.3);
                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
                display: grid;
                grid-template-columns: 1fr 1fr;
                gap: 3rem;
                align-items: center;
                max-width: 1000px;
                margin: 0 auto;
            }
            
            .product-detail-image img {
                width: 100%;
                height: 400px;
                object-fit: cover;
                border-radius: 15px;
            }
            
            .product-detail-name {
                font-size: 2.5rem;
                font-weight: 700;
                background: linear-gradient(135deg, #667eea, #764ba2);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
                margin-bottom: 1rem;
            }
            
            .product-detail-description {
                color: #666;
                font-size: 1.1rem;
                line-height: 1.6;
                margin-bottom: 2rem;
            }
            
            .product-detail-price {
                font-size: 2rem;
                font-weight: 700;
                color: #667eea;
                margin-bottom: 2rem;
            }
            
            .btn-custom.large {
                background: linear-gradient(135deg, #667eea, #764ba2);
                color: white;
                border: none;
                padding: 15px 30px;
                border-radius: 25px;
                font-size: 1.1rem;
                font-weight: 600;
                cursor: pointer;
                transition: all 0.3s ease;
                display: flex;
                align-items: center;
                gap: 10px;
            }
            
            .btn-custom.large:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(102,126,234, 0.4);
            }
            
            @media (max-width: 768px) {
                .product-detail-card {
                    grid-template-columns: 1fr;
                    gap: 2rem;
                    text-align: center;
                }
            }
        </style>
HTML;

        $resultTemplate = sprintf($template, $title, $content);
        return $resultTemplate;
    }
}